usage: crate_fuzzy_id_match [-h] [--version] [--allhelp] [--verbose]
                            [--key KEY] [--allow_default_hash_key]
                            [--rounding_sf ROUNDING_SF]
                            [--forename_freq_csv FORENAME_FREQ_CSV]
                            [--forename_cache_filename FORENAME_CACHE_FILENAME]
                            [--surname_freq_csv SURNAME_FREQ_CSV]
                            [--surname_cache_filename SURNAME_CACHE_FILENAME]
                            [--name_min_frequency NAME_MIN_FREQUENCY]
                            [--p_middle_name_n_present P_MIDDLE_NAME_N_PRESENT]
                            [--population_size POPULATION_SIZE]
                            [--postcode_csv_filename POSTCODE_CSV_FILENAME]
                            [--postcode_cache_filename POSTCODE_CACHE_FILENAME]
                            [--mean_oa_population MEAN_OA_POPULATION]
                            [--p_minor_forename_error P_MINOR_FORENAME_ERROR]
                            [--p_minor_surname_error P_MINOR_SURNAME_ERROR]
                            [--p_proband_middle_name_missing P_PROBAND_MIDDLE_NAME_MISSING]
                            [--p_sample_middle_name_missing P_SAMPLE_MIDDLE_NAME_MISSING]
                            [--p_minor_postcode_error P_MINOR_POSTCODE_ERROR]
                            [--min_log_odds_for_match MIN_LOG_ODDS_FOR_MATCH]
                            [--exceeds_next_best_log_odds EXCEEDS_NEXT_BEST_LOG_ODDS]
                            {selftest,speedtest,validate1,hash,compare_plaintext,compare_hashed_to_hashed,compare_hashed_to_plaintext}
                            ...

Identity matching via hashed fuzzy identifiers

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --allhelp             show help for all commands and exit

display options:
  --verbose             Be verbose (default: False)

hasher (secrecy) options:
  --key KEY             Key (passphrase) for hasher (default: fuzzy_id_match_d
                        efault_hash_key_DO_NOT_USE_FOR_LIVE_DATA)
  --allow_default_hash_key
                        Allow the default hash key to be used beyond tests.
                        INADVISABLE! (default: False)
  --rounding_sf ROUNDING_SF
                        Number of significant figures to use when rounding
                        frequencies in hashed version (default: 3)

frequency information for prior probabilities:
  --forename_freq_csv FORENAME_FREQ_CSV
                        CSV file of "name, frequency" pairs for forenames
                        (default: /home/rudolf/Documents/code/crate/working/us
                        _forename_freq.csv)
  --forename_cache_filename FORENAME_CACHE_FILENAME
                        File in which to store cached forename info (to speed
                        loading) (default: /home/rudolf/.local/share/crate/fuz
                        zy_forename_cache.pickle)
  --surname_freq_csv SURNAME_FREQ_CSV
                        CSV file of "name, frequency" pairs for forenames
                        (default: /home/rudolf/Documents/code/crate/working/us
                        _surname_freq.csv)
  --surname_cache_filename SURNAME_CACHE_FILENAME
                        File in which to store cached surname info (to speed
                        loading) (default: /home/rudolf/.local/share/crate/fuz
                        zy_surname_cache.pickle)
  --name_min_frequency NAME_MIN_FREQUENCY
                        Minimum base frequency for names. If a frequency is
                        less than this, use this minimum. Allowing extremely
                        low frequencies may increase the chances of a spurious
                        match. Note also that typical name frequency tables
                        don't give very-low-frequency information. For
                        example, for US census forename/surname information,
                        below 0.001 percent they report 0.000 percent; so a
                        reasonable minimum is 0.0005 percent or 0.000005 or
                        5e-6. (default: 5e-06)
  --p_middle_name_n_present P_MIDDLE_NAME_N_PRESENT
                        CSV list of probabilities that a randomly selected
                        person has a certain number of middle names. The first
                        number is P(has a first middle name). The second
                        number is P(has a second middle name | has a first
                        middle name), and so on. The last number present will
                        be re-used ad infinitum if someone has more names.
                        (default: 0.8,0.1375)
  --population_size POPULATION_SIZE
                        Size of the whole population, from which we calculate
                        the baseline log odds that two people, randomly
                        selected (and replaced) from the population are the
                        same person. (default: 66040000)
  --postcode_csv_filename POSTCODE_CSV_FILENAME
                        CSV file of postcode geography from UK Census/ONS data
                        (default:
                        /home/rudolf/dev/onspd/Data/ONSPD_MAY_2016_UK.csv)
  --postcode_cache_filename POSTCODE_CACHE_FILENAME
                        File in which to store cached postcodes (to speed
                        loading) (default: /home/rudolf/.local/share/crate/fuz
                        zy_postcode_cache.pickle)
  --mean_oa_population MEAN_OA_POPULATION
                        Mean population of a UK Census Output Area, from which
                        we estimate the population of postcode-based units.
                        (default: 309)

error probabilities:
  --p_minor_forename_error P_MINOR_FORENAME_ERROR
                        Assumed probability that a forename has an error in
                        that means it fails a full match but satisfies a
                        partial (metaphone) match. (default: 0.001)
  --p_minor_surname_error P_MINOR_SURNAME_ERROR
                        Assumed probability that a surname has an error in
                        that means it fails a full match but satisfies a
                        partial (metaphone) match. (default: 0.001)
  --p_proband_middle_name_missing P_PROBAND_MIDDLE_NAME_MISSING
                        Probability that a middle name, present in the sample,
                        is missing from the proband. (default: 0.05)
  --p_sample_middle_name_missing P_SAMPLE_MIDDLE_NAME_MISSING
                        Probability that a middle name, present in the
                        proband, is missing from the sample. (default: 0.05)
  --p_minor_postcode_error P_MINOR_POSTCODE_ERROR
                        Assumed probability that a postcode has an error in
                        that means it fails a full (postcode unit) match but
                        satisfies a partial (postcode sector) match. (default:
                        0.001)

matching rules:
  --min_log_odds_for_match MIN_LOG_ODDS_FOR_MATCH
                        Minimum probability of two people being the same,
                        before a match will be considered. (Default is
                        equivalent to p = 0.999.) (default: 6.906754778648553)
  --exceeds_next_best_log_odds EXCEEDS_NEXT_BEST_LOG_ODDS
                        Minimum log odds by which a best match must exceed the
                        next-best match to be considered a unique match.
                        (default: 10)

commands:
  Valid commands are as follows.

  {selftest,speedtest,validate1,hash,compare_plaintext,compare_hashed_to_hashed,compare_hashed_to_plaintext}
                        Specify one command.
    selftest            Run self-tests and stop
    speedtest           Run speed tests and stop
    validate1           Run validation test 1 and stop. In this test, a list
                        of people is compared to a version of itself, at times
                        with elements deleted or with typos introduced.
    hash                Hash an identifiable CSV file into an encrypted one.
    compare_plaintext   Compare a list of probands against a sample (both in
                        plaintext).
    compare_hashed_to_hashed
                        Compare a list of probands against a sample (both
                        hashed).
    compare_hashed_to_plaintext
                        Compare a list of probands (hashed) against a sample
                        (plaintext).

===============================================================================
Help for command 'selftest'
===============================================================================
usage: crate_fuzzy_id_match selftest [-h]

optional arguments:
  -h, --help  show this help message and exit

===============================================================================
Help for command 'speedtest'
===============================================================================
usage: crate_fuzzy_id_match speedtest [-h]

optional arguments:
  -h, --help  show this help message and exit

===============================================================================
Help for command 'validate1'
===============================================================================
usage: crate_fuzzy_id_match validate1 [-h] [--people_csv PEOPLE_CSV]
                                      [--people_cache_filename PEOPLE_CACHE_FILENAME]
                                      [--output_csv OUTPUT_CSV] [--seed SEED]

optional arguments:
  -h, --help            show this help message and exit
  --people_csv PEOPLE_CSV
                        CSV filename for validation 1 data. (Header row.
                        Columns: ['unique_id', 'research_id', 'first_name',
                        'middle_names', 'surname', 'dob', 'postcodes']. Use
                        semicolon-separated values for ['middle_names',
                        'postcodes'].
  --people_cache_filename PEOPLE_CACHE_FILENAME
                        File in which to store cached people info (to speed
                        loading)
  --output_csv OUTPUT_CSV
                        Output CSV file for validation
  --seed SEED           Random number seed, for introducing deliberate errors
                        in validation test 1

===============================================================================
Help for command 'hash'
===============================================================================
usage: crate_fuzzy_id_match hash [-h] [--input INPUT] [--output OUTPUT]
                                 [--include_unique_id]

optional arguments:
  -h, --help           show this help message and exit
  --input INPUT        CSV filename for input (plaintext) data. (Header row.
                       Columns: ['unique_id', 'research_id', 'first_name',
                       'middle_names', 'surname', 'dob', 'postcodes']. Use
                       semicolon-separated values for ['middle_names',
                       'postcodes'].
  --output OUTPUT      Output CSV file for hashed version.
  --include_unique_id  Include the (potentially identifying) 'unique_id' data?
                       Usually False; may be set to True for validation.

===============================================================================
Help for command 'compare_plaintext'
===============================================================================
usage: crate_fuzzy_id_match compare_plaintext [-h] [--probands PROBANDS]
                                              [--sample SAMPLE]
                                              [--sample_cache SAMPLE_CACHE]
                                              [--output OUTPUT]

optional arguments:
  -h, --help            show this help message and exit
  --probands PROBANDS   CSV filename for probands data. (Header row. Columns:
                        ['unique_id', 'research_id', 'first_name',
                        'middle_names', 'surname', 'dob', 'postcodes']. Use
                        semicolon-separated values for ['middle_names',
                        'postcodes'].
  --sample SAMPLE       CSV filename for sample data. (Header row. Columns:
                        ['unique_id', 'research_id', 'first_name',
                        'middle_names', 'surname', 'dob', 'postcodes']. Use
                        semicolon-separated values for ['middle_names',
                        'postcodes'].
  --sample_cache SAMPLE_CACHE
                        File in which to store cached sample info (to speed
                        loading)
  --output OUTPUT       Output CSV file for proband/sample comparison

===============================================================================
Help for command 'compare_hashed_to_hashed'
===============================================================================
usage: crate_fuzzy_id_match compare_hashed_to_hashed [-h]
                                                     [--probands PROBANDS]
                                                     [--sample SAMPLE]
                                                     [--output OUTPUT]

optional arguments:
  -h, --help           show this help message and exit
  --probands PROBANDS  CSV filename for probands data. (Header row. Columns:
                       ['unique_id', 'research_id', 'hashed_first_name',
                       'first_name_frequency', 'hashed_first_name_metaphone',
                       'first_name_metaphone_frequency',
                       'hashed_middle_names', 'middle_name_frequencies',
                       'hashed_middle_name_metaphones',
                       'middle_name_metaphone_frequencies', 'hashed_surname',
                       'surname_frequency', 'hashed_surname_metaphone',
                       'surname_metaphone_frequency', 'hashed_dob',
                       'hashed_postcode_units', 'postcode_unit_frequencies',
                       'hashed_postcode_sectors',
                       'postcode_sector_frequencies']. Use semicolon-separated
                       values for ['hashed_middle_name_metaphones',
                       'hashed_middle_names', 'hashed_postcode_sectors',
                       'hashed_postcode_units', 'middle_name_frequencies',
                       'middle_name_metaphone_frequencies',
                       'postcode_sector_frequencies',
                       'postcode_unit_frequencies'].
  --sample SAMPLE      CSV filename for sample data. (Header row. Columns:
                       ['unique_id', 'research_id', 'hashed_first_name',
                       'first_name_frequency', 'hashed_first_name_metaphone',
                       'first_name_metaphone_frequency',
                       'hashed_middle_names', 'middle_name_frequencies',
                       'hashed_middle_name_metaphones',
                       'middle_name_metaphone_frequencies', 'hashed_surname',
                       'surname_frequency', 'hashed_surname_metaphone',
                       'surname_metaphone_frequency', 'hashed_dob',
                       'hashed_postcode_units', 'postcode_unit_frequencies',
                       'hashed_postcode_sectors',
                       'postcode_sector_frequencies']. Use semicolon-separated
                       values for ['hashed_middle_name_metaphones',
                       'hashed_middle_names', 'hashed_postcode_sectors',
                       'hashed_postcode_units', 'middle_name_frequencies',
                       'middle_name_metaphone_frequencies',
                       'postcode_sector_frequencies',
                       'postcode_unit_frequencies'].
  --output OUTPUT      Output CSV file for proband/sample comparison

===============================================================================
Help for command 'compare_hashed_to_plaintext'
===============================================================================
usage: crate_fuzzy_id_match compare_hashed_to_plaintext [-h]
                                                        [--probands PROBANDS]
                                                        [--sample SAMPLE]
                                                        [--sample_cache SAMPLE_CACHE]
                                                        [--output OUTPUT]

optional arguments:
  -h, --help            show this help message and exit
  --probands PROBANDS   CSV filename for probands data. (Header row. Columns:
                        ['unique_id', 'research_id', 'hashed_first_name',
                        'first_name_frequency', 'hashed_first_name_metaphone',
                        'first_name_metaphone_frequency',
                        'hashed_middle_names', 'middle_name_frequencies',
                        'hashed_middle_name_metaphones',
                        'middle_name_metaphone_frequencies', 'hashed_surname',
                        'surname_frequency', 'hashed_surname_metaphone',
                        'surname_metaphone_frequency', 'hashed_dob',
                        'hashed_postcode_units', 'postcode_unit_frequencies',
                        'hashed_postcode_sectors',
                        'postcode_sector_frequencies']. Use semicolon-
                        separated values for ['hashed_middle_name_metaphones',
                        'hashed_middle_names', 'hashed_postcode_sectors',
                        'hashed_postcode_units', 'middle_name_frequencies',
                        'middle_name_metaphone_frequencies',
                        'postcode_sector_frequencies',
                        'postcode_unit_frequencies'].
  --sample SAMPLE       CSV filename for sample data. (Header row. Columns:
                        ['unique_id', 'research_id', 'first_name',
                        'middle_names', 'surname', 'dob', 'postcodes']. Use
                        semicolon-separated values for ['middle_names',
                        'postcodes'].
  --sample_cache SAMPLE_CACHE
                        File in which to store cached sample info (to speed
                        loading)
  --output OUTPUT       Output CSV file for proband/sample comparison


# Generated at 2019-09-01 22:19:27
