---
# yamllint disable rule:line-length
name: Installer
# yamllint disable-line rule:truthy
on:
    push:
        paths:
            - 'crate_anon/**'
            - .github/workflows/installer.yml
            - 'docker/**'
            - 'installer/**'
jobs:
    installer:
        runs-on: ubuntu-latest
        env:
            DB_RESEARCH_DATABASE: research
            DB_RESEARCH_USER: research
            DB_RESEARCH_PASSWORD: research
            DB_SECRET_DATABASE: secret
            DB_SECRET_USER: secret
            DB_SECRET_PASSWORD: secret
            DB_SOURCE_DATABASE: source
            DB_SOURCE_USER: source
            DB_SOURCE_PASSWORD: source
            DB_ROOT_USER: root
            DB_ROOT_PASSWORD: root

        steps:
            - uses: actions/checkout@v2

            - name: Set up MySQL
              run: |
                  set -euxo pipefail
                  sudo sed -i "s/.*bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/mysql.conf.d/mysqld.cnf
                  cat /etc/mysql/mysql.conf.d/mysqld.cnf
                  sudo service mysql start
                  mysql -e 'CREATE DATABASE ${{ env.DB_RESEARCH_DATABASE }};' -u${{ env.DB_ROOT_USER  }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'CREATE USER `${{ env.DB_RESEARCH_USER }}`@`localhost` IDENTIFIED BY "${{ env.DB_RESEARCH_PASSWORD }}";' -u${{ env.DB_ROOT_USER  }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'GRANT ALL PRIVILEGES ON `${{ env.DB_RESEARCH_DATABASE }}`.* TO `${{ env.DB_RESEARCH_USER }}`@`localhost`;' -u${{ env.DB_ROOT_USER }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'CREATE DATABASE ${{ env.DB_SECRET_DATABASE }};' -u${{ env.DB_ROOT_USER  }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'CREATE USER `${{ env.DB_SECRET_USER }}`@`localhost` IDENTIFIED BY "${{ env.DB_SECRET_PASSWORD }}";' -u${{ env.DB_ROOT_USER  }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'GRANT ALL PRIVILEGES ON `${{ env.DB_SECRET_DATABASE }}`.* TO `${{ env.DB_SECRET_USER }}`@`localhost`;' -u${{ env.DB_ROOT_USER }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'CREATE DATABASE ${{ env.DB_SOURCE_DATABASE }};' -u${{ env.DB_ROOT_USER  }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'CREATE USER `${{ env.DB_SOURCE_USER }}`@`localhost` IDENTIFIED BY "${{ env.DB_SOURCE_PASSWORD }}";' -u${{ env.DB_ROOT_USER  }} -p${{ env.DB_ROOT_PASSWORD }}
                  mysql -e 'GRANT ALL PRIVILEGES ON `${{ env.DB_SOURCE_DATABASE }}`.* TO `${{ env.DB_SOURCE_USER }}`@`localhost`;' -u${{ env.DB_ROOT_USER }} -p${{ env.DB_ROOT_PASSWORD }}

            - name: Build
              run: |
                  set -euxo pipefail
                  sudo apt-get update
                  sudo apt -y install python3-virtualenv python3-venv
                  # TODO: wget this from releases as a normal user would
                  # and don't checkout above
                  docker --version
                  cd installer
                  ./installer.sh
