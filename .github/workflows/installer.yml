---
# yamllint disable rule:line-length
name: Installer
# yamllint disable-line rule:truthy
on:
    push:
        paths:
            - 'crate_anon/**'
            - .github/workflows/installer.yml
            - 'docker/**'
            - 'installer/**'
            - setup.py
jobs:
    installer:
        runs-on: ubuntu-latest
        env:
            DB_RESEARCH_DATABASE: research
            DB_RESEARCH_USER: research
            DB_RESEARCH_PASSWORD: research
            DB_SECRET_DATABASE: secret
            DB_SECRET_USER: secret
            DB_SECRET_PASSWORD: secret
            DB_SOURCE_DATABASE: source
            DB_SOURCE_USER: source
            DB_SOURCE_PASSWORD: source
            DB_ROOT_USER: root
            DB_ROOT_PASSWORD: root

        steps:
            - name: Build
              run: |
                  set -euxo pipefail
                  sudo apt-get update
                  sudo apt -y install python3-virtualenv python3-venv
                  docker --version
                  export CRATE_DOCKER_MYSQL_CRATE_HOST_PORT=3307
                  export CRATE_DOCKER_CONFIG_HOST_DIR=${HOME}/crate_config
                  export CRATE_DOCKER_GATE_BIOYODIE_RESOURCES_HOST_DIR=${HOME}/bioyodie_resources
                  export CRATE_DOCKER_MYSQL_CRATE_USER_PASSWORD=ramalamadingdong
                  export CRATE_DOCKER_MYSQL_CRATE_ROOT_PASSWORD=shoobydoobydoo
                  export CRATE_DOCKER_INSTALL_USER_ID=$(id -u)
                  export CRATE_DOCKER_INSTALL_GROUP_ID=$(id -g)
                  export CRATE_DOCKER_DJANGO_SUPERUSER_USERNAME=admin
                  export CRATE_DOCKER_DJANGO_SUPERUSER_PASSWORD=servisolironcamera
                  export CRATE_DOCKER_DJANGO_SUPERUSER_EMAIL=admin@example.com
                  export CRATE_DOCKER_CRATEWEB_HOST_PORT=8000
                  export CRATE_DOCKER_CRATEWEB_USE_HTTPS=0
                  # curl -L https://github.com/RudolfCardinal/crate/releases/latest/download/installer.sh | bash
                  curl -L https://github.com/RudolfCardinal/crate/archive/refs/tags/installer-test-1/installer.sh | bash
                  # Check Django app is running
                  cd ${GITHUB_WORKSPACE}/docker/dockerfiles
                  docker compose logs
                  SERVER_IP=$(docker inspect crate_crate_server --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}')
                  curl -I -L --retry 10 --retry-connrefused --fail $SERVER_IP:8000/crate/
                  curl -I -L --fail $SERVER_IP:8000/crate_static/scrubber.png
                  cd ${GITHUB_WORKSPACE}/docker/dockerfiles
                  # Check anonymiser worked
                  anonymised=$(docker compose exec -T research_db mysql -Ns -u research -presearch research -e "SELECT SUBSTR(note, 1, 36) FROM note LIMIT 1")
                  [ "${anonymised}" = "\n[__PPP__] [__PPP__] lived on a farm" ]
