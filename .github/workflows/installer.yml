---
# yamllint disable rule:line-length
name: Installer
# yamllint disable-line rule:truthy
on:
    push:
        paths:
            - 'crate_anon/**'
            - .github/workflows/installer.yml
            - github_action_scripts/anonymisation_checks.sh
            - github_action_scripts/docker_db_setup.sh
            - github_action_scripts/installer_setup.sh
            - github_action_scripts/post_installation_checks.sh
            - github_action_scripts/python_setup.sh
            - github_action_scripts/set_crate_docker_environment
            - github_action_scripts/set_crate_docker_mssql_environment
            - github_action_scripts/set_crate_docker_mysql_environment
            - github_action_scripts/source_database.sql
            - 'docker/**'
            - 'installer/**'
            - setup.py
jobs:
    installer:
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4
            - name: Run with demo MySQL databases
              run: |
                set -eux -o pipefail
                docker version
                docker compose version
                source ${GITHUB_WORKSPACE}/github_action_scripts/set_crate_docker_environment
                ${GITHUB_WORKSPACE}/github_action_scripts/installer_setup.sh
                cd ${GITHUB_WORKSPACE}/installer
                ./installer.sh -d
                export CRATE_HOME=${GITHUB_WORKSPACE}
                ${GITHUB_WORKSPACE}/github_action_scripts/post_installation_checks.sh
                ${GITHUB_WORKSPACE}/github_action_scripts/anonymisation_checks.sh
            - name: Run with external MSSQL databases
              run: |
                set -eux -o pipefail
                # Now do it again with external MSSQL / ODBC databases
                # docker-compose down --volumes with relevant docker-compose files
                source ${GITHUB_WORKSPACE}/github_action_scripts/set_crate_docker_environment
                cd ${GITHUB_WORKSPACE}/installer
                ./installer.sh -d -p
                rm ${CRATE_DOCKER_CONFIG_HOST_DIR}/${CRATE_DOCKER_CRATEWEB_CONFIG_FILENAME}
                rm ${CRATE_DOCKER_CONFIG_HOST_DIR}/${CRATE_DOCKER_CRATE_ANON_CONFIG}
                cp ${GITHUB_WORKSPACE}/github_action_scripts/odbc_user.ini ${CRATE_DOCKER_CONFIG_HOST_DIR}
                source ${GITHUB_WORKSPACE}/github_action_scripts/set_crate_docker_mssql_environment
                ${GITHUB_WORKSPACE}/github_action_scripts/python_setup.sh
                ${GITHUB_WORKSPACE}/github_action_scripts/docker_db_setup.sh sqlserver
                docker ps
                env
                ./installer.sh -d -v
                ${GITHUB_WORKSPACE}/github_action_scripts/post_installation_checks.sh
            - name: Run with external MySQL databases
              run: |
                set -eux -o pipefail
                # Now do it again with external MySQL databases
                # docker-compose down --volumes with relevant docker-compose files
                source ${GITHUB_WORKSPACE}/github_action_scripts/set_crate_docker_environment
                cd ${GITHUB_WORKSPACE}/installer
                ./installer.sh -d -p
                rm ${CRATE_DOCKER_CONFIG_HOST_DIR}/${CRATE_DOCKER_CRATEWEB_CONFIG_FILENAME}
                rm ${CRATE_DOCKER_CONFIG_HOST_DIR}/${CRATE_DOCKER_CRATE_ANON_CONFIG}
                source ${GITHUB_WORKSPACE}/github_action_scripts/set_crate_docker_mysql_environment
                ${GITHUB_WORKSPACE}/github_action_scripts/docker_db_setup.sh mysql 43306
                docker ps
                env
                cat ${GITHUB_WORKSPACE}/github_action_scripts/source_database.sql | mysql -h localhost -P ${CRATE_INSTALLER_SOURCE_DATABASE_PORT} -u ${CRATE_DOCKER_SOURCE_DATABASE_USER_NAME} -p${CRATE_DOCKER_SOURCE_DATABASE_USER_PASSWORD} --protocol=tcp ${CRATE_DOCKER_SOURCE_DATABASE_NAME}
                ./installer.sh -d -v
                ${GITHUB_WORKSPACE}/github_action_scripts/post_installation_checks.sh
            - name: Dump stuff on failure
              if: failure()
              run: |
                set -eux -o pipefail
                cat ${CRATE_DOCKER_CONFIG_HOST_DIR}/${CRATE_DOCKER_CRATEWEB_CONFIG_FILENAME}
