# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
from django.conf import settings
import core.extra
import consent.models
import django.core.files.storage


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('consent', '0003_auto_20151021_2252'),
    ]

    operations = [
        migrations.CreateModel(
            name='DummyPatientLookup',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pt_dob', models.DateField(blank=True, verbose_name='Patient date of birth', null=True)),
                ('pt_dod', models.DateField(blank=True, verbose_name='Patient date of death (NULL if alive)', null=True)),
                ('pt_dead', models.BooleanField(verbose_name='Patient is dead')),
                ('pt_discharged', models.NullBooleanField(verbose_name='Patient discharged')),
                ('pt_sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('X', 'Inderminate/intersex'), ('?', 'Unknown')], blank=True, verbose_name='Patient sex', max_length=1)),
                ('pt_title', models.CharField(blank=True, verbose_name='Patient title', max_length=20)),
                ('pt_first_name', models.CharField(blank=True, verbose_name='Patient first name', max_length=100)),
                ('pt_last_name', models.CharField(blank=True, verbose_name='Patient last name', max_length=100)),
                ('pt_address_1', models.CharField(blank=True, verbose_name='Patient address line 1', max_length=100)),
                ('pt_address_2', models.CharField(blank=True, verbose_name='Patient address line 2', max_length=100)),
                ('pt_address_3', models.CharField(blank=True, verbose_name='Patient address line 3', max_length=100)),
                ('pt_address_4', models.CharField(blank=True, verbose_name='Patient address line 4', max_length=100)),
                ('pt_address_5', models.CharField(blank=True, verbose_name='Patient address line 5 (county)', max_length=100)),
                ('pt_address_6', models.CharField(blank=True, verbose_name='Patient address line 6 (postcode)', max_length=100)),
                ('pt_address_7', models.CharField(blank=True, verbose_name='Patient address line 7 (country)', max_length=100)),
                ('pt_telephone', models.CharField(blank=True, verbose_name='Patient telephone', max_length=20)),
                ('pt_email', models.EmailField(blank=True, verbose_name='Patient email', max_length=254)),
                ('gp_title', models.CharField(blank=True, verbose_name='GP title', max_length=20)),
                ('gp_first_name', models.CharField(blank=True, verbose_name='GP first name', max_length=100)),
                ('gp_last_name', models.CharField(blank=True, verbose_name='GP last name', max_length=100)),
                ('gp_address_1', models.CharField(blank=True, verbose_name='GP address line 1', max_length=100)),
                ('gp_address_2', models.CharField(blank=True, verbose_name='GP address line 2', max_length=100)),
                ('gp_address_3', models.CharField(blank=True, verbose_name='GP address line 3', max_length=100)),
                ('gp_address_4', models.CharField(blank=True, verbose_name='GP address line 4', max_length=100)),
                ('gp_address_5', models.CharField(blank=True, verbose_name='GP address line 5 (county)', max_length=100)),
                ('gp_address_6', models.CharField(blank=True, verbose_name='GP address line 6 (postcode)', max_length=100)),
                ('gp_address_7', models.CharField(blank=True, verbose_name='GP address line 7 (country)', max_length=100)),
                ('gp_telephone', models.CharField(blank=True, verbose_name='GP telephone', max_length=20)),
                ('gp_email', models.EmailField(blank=True, verbose_name='GP email', max_length=254)),
                ('clinician_title', models.CharField(blank=True, verbose_name='Clinician title', max_length=20)),
                ('clinician_first_name', models.CharField(blank=True, verbose_name='Clinician first name', max_length=100)),
                ('clinician_last_name', models.CharField(blank=True, verbose_name='Clinician last name', max_length=100)),
                ('clinician_address_1', models.CharField(blank=True, verbose_name='Clinician address line 1', max_length=100)),
                ('clinician_address_2', models.CharField(blank=True, verbose_name='Clinician address line 2', max_length=100)),
                ('clinician_address_3', models.CharField(blank=True, verbose_name='Clinician address line 3', max_length=100)),
                ('clinician_address_4', models.CharField(blank=True, verbose_name='Clinician address line 4', max_length=100)),
                ('clinician_address_5', models.CharField(blank=True, verbose_name='Clinician address line 5 (county)', max_length=100)),
                ('clinician_address_6', models.CharField(blank=True, verbose_name='Clinician address line 6 (postcode)', max_length=100)),
                ('clinician_address_7', models.CharField(blank=True, verbose_name='Clinician address line 7 (country)', max_length=100)),
                ('clinician_telephone', models.CharField(blank=True, verbose_name='Clinician telephone', max_length=20)),
                ('clinician_email', models.EmailField(blank=True, verbose_name='Clinician email', max_length=254)),
                ('clinician_is_consultant', models.BooleanField(default=False, verbose_name='Clinician is a consultant')),
                ('clinician_signatory_title', models.CharField(blank=True, verbose_name="Clinician's title for signature", max_length=100)),
                ('nhs_number', models.BigIntegerField(unique=True, verbose_name='NHS number')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientLookup',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pt_dob', models.DateField(blank=True, verbose_name='Patient date of birth', null=True)),
                ('pt_dod', models.DateField(blank=True, verbose_name='Patient date of death (NULL if alive)', null=True)),
                ('pt_dead', models.BooleanField(verbose_name='Patient is dead')),
                ('pt_discharged', models.NullBooleanField(verbose_name='Patient discharged')),
                ('pt_sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('X', 'Inderminate/intersex'), ('?', 'Unknown')], blank=True, verbose_name='Patient sex', max_length=1)),
                ('pt_title', models.CharField(blank=True, verbose_name='Patient title', max_length=20)),
                ('pt_first_name', models.CharField(blank=True, verbose_name='Patient first name', max_length=100)),
                ('pt_last_name', models.CharField(blank=True, verbose_name='Patient last name', max_length=100)),
                ('pt_address_1', models.CharField(blank=True, verbose_name='Patient address line 1', max_length=100)),
                ('pt_address_2', models.CharField(blank=True, verbose_name='Patient address line 2', max_length=100)),
                ('pt_address_3', models.CharField(blank=True, verbose_name='Patient address line 3', max_length=100)),
                ('pt_address_4', models.CharField(blank=True, verbose_name='Patient address line 4', max_length=100)),
                ('pt_address_5', models.CharField(blank=True, verbose_name='Patient address line 5 (county)', max_length=100)),
                ('pt_address_6', models.CharField(blank=True, verbose_name='Patient address line 6 (postcode)', max_length=100)),
                ('pt_address_7', models.CharField(blank=True, verbose_name='Patient address line 7 (country)', max_length=100)),
                ('pt_telephone', models.CharField(blank=True, verbose_name='Patient telephone', max_length=20)),
                ('pt_email', models.EmailField(blank=True, verbose_name='Patient email', max_length=254)),
                ('gp_title', models.CharField(blank=True, verbose_name='GP title', max_length=20)),
                ('gp_first_name', models.CharField(blank=True, verbose_name='GP first name', max_length=100)),
                ('gp_last_name', models.CharField(blank=True, verbose_name='GP last name', max_length=100)),
                ('gp_address_1', models.CharField(blank=True, verbose_name='GP address line 1', max_length=100)),
                ('gp_address_2', models.CharField(blank=True, verbose_name='GP address line 2', max_length=100)),
                ('gp_address_3', models.CharField(blank=True, verbose_name='GP address line 3', max_length=100)),
                ('gp_address_4', models.CharField(blank=True, verbose_name='GP address line 4', max_length=100)),
                ('gp_address_5', models.CharField(blank=True, verbose_name='GP address line 5 (county)', max_length=100)),
                ('gp_address_6', models.CharField(blank=True, verbose_name='GP address line 6 (postcode)', max_length=100)),
                ('gp_address_7', models.CharField(blank=True, verbose_name='GP address line 7 (country)', max_length=100)),
                ('gp_telephone', models.CharField(blank=True, verbose_name='GP telephone', max_length=20)),
                ('gp_email', models.EmailField(blank=True, verbose_name='GP email', max_length=254)),
                ('clinician_title', models.CharField(blank=True, verbose_name='Clinician title', max_length=20)),
                ('clinician_first_name', models.CharField(blank=True, verbose_name='Clinician first name', max_length=100)),
                ('clinician_last_name', models.CharField(blank=True, verbose_name='Clinician last name', max_length=100)),
                ('clinician_address_1', models.CharField(blank=True, verbose_name='Clinician address line 1', max_length=100)),
                ('clinician_address_2', models.CharField(blank=True, verbose_name='Clinician address line 2', max_length=100)),
                ('clinician_address_3', models.CharField(blank=True, verbose_name='Clinician address line 3', max_length=100)),
                ('clinician_address_4', models.CharField(blank=True, verbose_name='Clinician address line 4', max_length=100)),
                ('clinician_address_5', models.CharField(blank=True, verbose_name='Clinician address line 5 (county)', max_length=100)),
                ('clinician_address_6', models.CharField(blank=True, verbose_name='Clinician address line 6 (postcode)', max_length=100)),
                ('clinician_address_7', models.CharField(blank=True, verbose_name='Clinician address line 7 (country)', max_length=100)),
                ('clinician_telephone', models.CharField(blank=True, verbose_name='Clinician telephone', max_length=20)),
                ('clinician_email', models.EmailField(blank=True, verbose_name='Clinician email', max_length=254)),
                ('clinician_is_consultant', models.BooleanField(default=False, verbose_name='Clinician is a consultant')),
                ('clinician_signatory_title', models.CharField(blank=True, verbose_name="Clinician's title for signature", max_length=100)),
                ('lookup_when', models.DateTimeField(auto_now_add=True, verbose_name='When fetched from clinical database (UTC)')),
                ('source_db', models.CharField(choices=[('dummy_clinical', 'Dummy clinical database for testing'), ('cpft_crs', 'CPFT Care Records System (CRS) 2005-2012'), ('cpft_rio', 'CPFT RiO 2013-')], verbose_name='Source database used for lookup', max_length=20)),
                ('nhs_number', models.BigIntegerField(verbose_name='NHS number used for lookup')),
                ('decisions', models.TextField(blank=True, verbose_name='Decisions made during lookup')),
                ('secret_decisions', models.TextField(blank=True, verbose_name='Secret (identifying) decisions made during lookup')),
                ('pt_found', models.BooleanField(default=False, verbose_name='Patient found')),
                ('gp_found', models.BooleanField(default=False, verbose_name='GP found')),
                ('clinician_found', models.BooleanField(default=False, verbose_name='Clinician found')),
                ('patient', models.ForeignKey(to='consent.Patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamRep',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('team', models.CharField(unique=True, verbose_name='Team description (matching RiO)', max_length=100)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='emailattachment',
            name='file',
            field=models.FileField(upload_to='', storage=django.core.files.storage.FileSystemStorage(location='/home/rudolf/Documents/code/crate/working/crateweb/crate_filestorage', base_url='/privatestorage')),
        ),
        migrations.AlterField(
            model_name='study',
            name='study_details_pdf',
            field=core.extra.ContentTypeRestrictedFileField(upload_to=consent.models.study_details_upload_to, blank=True, storage=django.core.files.storage.FileSystemStorage(location='/home/rudolf/Documents/code/crate/working/crateweb/crate_filestorage', base_url='/privatestorage')),
        ),
        migrations.AlterField(
            model_name='study',
            name='subject_form_template_pdf',
            field=core.extra.ContentTypeRestrictedFileField(upload_to=consent.models.study_form_upload_to, blank=True, storage=django.core.files.storage.FileSystemStorage(location='/home/rudolf/Documents/code/crate/working/crateweb/crate_filestorage', base_url='/privatestorage')),
        ),
    ]
