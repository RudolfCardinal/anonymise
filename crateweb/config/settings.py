#!/usr/bin/env python3
# config/settings.py

"""
Django settings for crateweb project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import datetime
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# This is the path of the file FROM WHICH THE MODULE WAS LOADED, NOT THE
# DIRECTORY THIS FILE IS IN. So for command-line execute it's e.g.
# /somewhere/crate/crateweb (the directory in which manage.py runs).
# See https://docs.python.org/2/reference/datamodel.html
# Verify this with:

# import logging
# logger = logging.getLogger(__name__)
# logger.warning("BASE_DIR: {}".format(BASE_DIR))


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',  # for nice comma formatting of numbers
    'debug_toolbar',  # for debugging
    'sslserver',  # for SSL testing
    'userprofile',  # for user-specific settings
    'research',  # the research database query app
    'consent',  # the consent-to-contact app
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    # Additional:
    'core.middleware.UserBasedExceptionMiddleware',  # provide debugging details to superusers  # noqa
    'core.middleware.LoginRequiredMiddleware',  # prohibit all pages except login pages if not logged in  # noqa
    'core.middleware.RestrictAdminMiddleware',  # non-developers can't access the devadmin site  # noqa
)

LOGIN_URL = '/login/'  # for LoginRequiredMiddleware
LOGIN_EXEMPT_URLS = ()  # for LoginRequiredMiddleware

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,  # can't use OPTIONS/loaders with this
        'OPTIONS': {
            'context_processors': [
                # 'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'research.context_processors.common_context',
            ],
            # 'loaders': (
            #     'django.template.loaders.filesystem.Loader',
            #     'django.template.loaders.app_directories.Loader',
            #     'apptemplates.Loader',
            # ),
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

# https://docs.djangoproject.com/en/1.8/topics/i18n/timezones/
USE_TZ = True

# =============================================================================
# Static files (CSS, JavaScript, Images)
# =============================================================================
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATICFILES_ROOT = os.path.join(BASE_DIR, 'static_collected')

# =============================================================================
# Some managed database access goes to the secret mapping database.
# =============================================================================

DATABASE_ROUTERS = ['research.models.PidLookupRouter']

# =============================================================================
# Security; https://docs.djangoproject.com/en/1.8/topics/security/
# =============================================================================

# *** # SECURE_SSL_REDIRECT = True
# *** # SESSION_COOKIE_SECURE = True
# *** # CSRF_COOKIE_SECURE = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

USED_TOKEN_TIMEOUT = datetime.timedelta(days=14)

# =============================================================================
# Logging; https://docs.djangoproject.com/en/1.8/topics/logging/
# =============================================================================

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(name)s:%(levelname)s:%(asctime)s:%(module)s:%(message)s'  # noqa
        },
        'simple': {
            'format': '%(name)s:%(levelname)s:%(message)s'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            # 'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': True,
        },
        'research': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
            'propagate': True,
        },
        'consent': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
            'propagate': True,
        },
        'core': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
            'propagate': True,
        },
    },
}

# =============================================================================
# PDF generation
# =============================================================================
# https://pypi.python.org/pypi/pdfkit

WKHTMLTOPDF_OPTIONS = {
    'page-size': 'A4',
    'orientation': 'portrait',
    'margin-top': '20mm',
    'margin-right': '20mm',
    'margin-bottom': '20mm',
    'margin-left': '20mm',
    'encoding': 'UTF-8',
}

# =============================================================================
# Import from a site-specific file, crate_local_settings.py, which must be
# on the PYTHONPATH (via environment variable or WSGI settings)
# =============================================================================

from crate_local_settings import *  # noqa
